import asyncio
import logging

from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove

import storage
from configurations.keyboards import create_heroes_keyboard, get_main_keyboard
from configurations.quiz_manager import HeroQuizManager, HeroQuizStates
from user_panel.hero_quiz_handler import (create_heroes_quiz_keyboard,
                                          send_hero_question)


logger = logging.getLogger("bot_logger")


async def handle_main_menu(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await callback_query.message.answer_photo(
        photo="https://i.postimg.cc/Z5Gm3JZT/IMG-1540.jpg",
        caption=" –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PATRIOT BOT!\n\n"
        "üìö –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
        "   ‚Ä¢ –û –≥–µ—Ä–æ—è—Ö, –≤ —á–µ—Å—Ç—å –∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω—ã —É–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–∞ –ì—Ä–æ–¥–Ω–æ\n"
        "   ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—é —Ä–æ–¥–Ω–æ–≥–æ –∫—Ä–∞—è\n\n"
        "üéØ –ê —Ç–∞–∫–∂–µ —Å–º–æ–∂–µ—à—å:\n"
        "   ‚Ä¢ –ü—Ä–æ–π—Ç–∏ –æ–±—É—á–∞—é—â—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n"
        "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è\n"
        "   ‚Ä¢ –ó–∞–∫—Ä–µ–ø–∏—Ç—å –∏–∑—É—á–µ–Ω–Ω–æ–µ\n\n"
        "üöÄ –ù–∞—á–Ω—ë–º –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é!\n\n"
        "üëá –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=get_main_keyboard(),
        )


async def handle_heroes_pagination(callback: types.CallbackQuery,
                                   state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≥–µ—Ä–æ–µ–≤"""
    if not callback.data.startswith("heroes_page_"):
        await callback.answer()
        return

    try:
        page = int(callback.data.split("_")[2])
        total_heroes = len(storage.HERO_URLS) if hasattr(storage,
                                                         "HERO_URLS") else 0

        if total_heroes == 0:
            await callback.answer("‚ùå –°–ø–∏—Å–æ–∫ –≥–µ—Ä–æ–µ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                                  show_alert=True)
            return

        heroes_per_page = 5
        start_hero = page * heroes_per_page + 1
        end_hero = min((page + 1) * heroes_per_page, total_heroes)

        # –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ –≥–µ—Ä–æ–µ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        hero_names = []
        for hero_id in range(start_hero, end_hero + 1):
            hero_name = storage.HERO_NAMES.get(hero_id, f"–ì–µ—Ä–æ–π {hero_id}")
            hero_names.append(hero_name)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
        await callback.message.edit_text(
            f"üéñÔ∏è *–ì–µ—Ä–æ–∏ –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã*\n\n"
            f"üìö –î–æ—Å—Ç—É–ø–Ω–æ {total_heroes} –≥–µ—Ä–æ–µ–≤\n"
            f"üìñ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
            reply_markup=create_heroes_keyboard(page),
            parse_mode="Markdown",
        )
        await callback.answer()

    except Exception as e:
        await callback.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {e}",
                              show_alert=True)


async def start_hero_quiz_mode(message: types.Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ –≥–µ—Ä–æ—è–º"""
    await state.set_state(HeroQuizStates.choosing_hero_quiz)

    await message.answer(
        "üéñÔ∏è *–í–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ –≥–µ—Ä–æ—è–º*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:\n"
        "‚Ä¢ 5 —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n"
        "‚Ä¢ –¢–æ–ª—å–∫–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —Ä–µ–∂–∏–º\n"
        "‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑\n\n",
        reply_markup=ReplyKeyboardRemove(),
        parse_mode="Markdown",
    )

    # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ–µ–≤
    await message.answer(
        f"üìñ *–í—Å–µ–≥–æ –≥–µ—Ä–æ–µ–≤: {len(storage.HERO_NAMES)}*\n"
        "üìÑ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
        reply_markup=create_heroes_quiz_keyboard(0),
        parse_mode="Markdown",
    )


async def handle_hero_quiz_selection(callback: types.CallbackQuery,
                                     state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ—è –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    if callback.data == "hero_quiz_back":
        await state.clear()
        await callback.message.answer_photo(
            photo="https://i.postimg.cc/Z5Gm3JZT/IMG-1540.jpg",
            caption=" –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PATRIOT BOT!\n\n"
            "üìö –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "   ‚Ä¢ –û –≥–µ—Ä–æ—è—Ö, –≤ —á–µ—Å—Ç—å –∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω—ã —É–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–∞ –ì—Ä–æ–¥–Ω–æ\n"
            "   ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—é —Ä–æ–¥–Ω–æ–≥–æ –∫—Ä–∞—è\n\n"
            "üéØ –ê —Ç–∞–∫–∂–µ —Å–º–æ–∂–µ—à—å:\n"
            "   ‚Ä¢ –ü—Ä–æ–π—Ç–∏ –æ–±—É—á–∞—é—â—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n"
            "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è\n"
            "   ‚Ä¢ –ó–∞–∫—Ä–µ–ø–∏—Ç—å –∏–∑—É—á–µ–Ω–Ω–æ–µ\n\n"
            "üöÄ –ù–∞—á–Ω—ë–º –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é!\n\n"
            "üëá –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=get_main_keyboard(),
            )
        await callback.answer()
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if callback.data.startswith("hero_quiz_page_"):
        try:
            page = int(callback.data.split("_")[3])
            await callback.message.edit_reply_markup(
                reply_markup=create_heroes_quiz_keyboard(page)
            )
            await callback.answer()
            return
        except (ValueError, IndexError):
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏", show_alert=True)
            return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ—è
    if callback.data.startswith("hero_quiz_"):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø–∞–≥–∏–Ω–∞—Ü–∏—è
            if "page" in callback.data:
                return

            hero_id = int(callback.data.split("_")[2])

            if hero_id < 1 or hero_id > 35:
                await callback.answer("‚ùå –ì–µ—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                return

            hero_name = storage.HERO_NAMES.get(hero_id, f"–ì–µ—Ä–æ–π {hero_id}")

            # –ù–∞—á–∏–Ω–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
            await state.set_state(HeroQuizStates.in_hero_quiz)
            user_id = callback.from_user.id

            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω
            quiz_manager = HeroQuizManager()

            # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≥–µ—Ä–æ—è
            questions = quiz_manager.get_hero_questions(hero_id)

            if not questions:
                await callback.answer(
                    "‚ùå –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —ç—Ç–æ–≥–æ –≥–µ—Ä–æ—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True
                )
                return

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
            quiz_manager.quiz_data[user_id] = {
                "current_question": 0,
                "score": 0,
                "total_questions": len(questions),
                "questions": questions,
                "hero_id": hero_id,
                "hero_name": hero_name,
            }

            await callback.message.edit_text(
                f"üéñÔ∏è *–í–∏–∫—Ç–æ—Ä–∏–Ω–∞: {hero_name}*\n\n"
                f"–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞!\n"
                f"‚Ä¢ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤\n"
                f"‚Ä¢ –¢–æ–ª—å–∫–æ –æ–±—É—á–µ–Ω–∏–µ\n"
                f"‚Ä¢ –£–¥–∞—á–∏! üçÄ",
                parse_mode="Markdown",
            )

            await asyncio.sleep(2)
            await send_hero_question(callback.message, user_id)
            await callback.answer()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã",
                                  show_alert=True)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    elif callback.data == "hero_quiz_current_page":
        await callback.answer("–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")

from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from data.google_sheets import sheets_manager

leaderboard_router = Router()


def get_score_text(score):
    """–°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–±–∞–ª–ª' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞"""
    if score % 10 == 1 and score % 100 != 11:
        return f"{score} –±–∞–ª–ª"
    elif score % 10 in [2, 3, 4] and score % 100 not in [12, 13, 14]:
        return f"{score} –±–∞–ª–ª–∞"
    else:
        return f"{score} –±–∞–ª–ª–æ–≤"


def format_leaderboard():
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –∏–∑ Google Sheets"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        all_results = sheets_manager.get_all_results()

        if not all_results:
            return "üèÜ <b>–¢–æ–ø –ø—è—Ç—å –ª—É—á—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤:</b>\n\n1."
        " ‚Äî\n2. ‚Äî\n3. ‚Äî\n4. ‚Äî\n5. ‚Äî"

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
        sorted_results = sorted(
            all_results, key=lambda x: int(x.get("Correct Answers", 0)),
            reverse=True
        )

        # –ë–µ—Ä–µ–º —Ç–æ–ø-5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        top_results = sorted_results[:5]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
        leaderboard_text = "üèÜ <b>–¢–æ–ø –ø—è—Ç—å –ª—É—á—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤:</b>\n\n"

        for i, result in enumerate(top_results, 1):
            last_name = result.get("Last Name", "").strip()
            first_name = result.get("First Name", "").strip()
            correct_answers = int(result.get("Correct Answers", 0))

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–º—è
            if last_name and first_name:
                name = f"{last_name} {first_name}"
            elif first_name:
                name = first_name
            elif last_name:
                name = last_name
            else:
                name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ "–±–∞–ª–ª"
            score_text = get_score_text(correct_answers)
            leaderboard_text += f"{i}. {name} - {score_text}\n"

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        total_participants = len(all_results)
        leaderboard_text += f"\nüìä –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {total_participants}"

        return leaderboard_text

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


@leaderboard_router.message(Command("leaders"))
async def show_leaderboard(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤"""
    leaderboard_text = format_leaderboard()
    await message.answer(leaderboard_text, parse_mode="HTML")
